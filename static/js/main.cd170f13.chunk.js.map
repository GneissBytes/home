{"version":3,"sources":["hooks/useWidth.tsx","Components/Navbar.tsx","Components/elements/SocialLink.tsx","Components/elements/ScrollButton.tsx","Components/Home.tsx","Components/About.tsx","Components/list/ContentListItem.tsx","Components/list/ContentList.tsx","Components/Education.tsx","Components/Experience.tsx","Components/Certifications.tsx","Components/Footer.tsx","hooks/useHover.tsx","Components/portfolio/PortfolioItem.tsx","Components/portfolio/PortfolioList.tsx","Components/Works.tsx","Components/Contact.tsx","hooks/useVisibility.tsx","Components/elements/SkillBar.tsx","Components/Skills.tsx","App.tsx","reducers/dataReducer.tsx","reducers/index.tsx","registerServiceWorker.js","index.tsx"],"names":["getWindowWidth","window","innerWidth","useWidth","minWidth","useState","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","Navbar","menuHidden","setMenuHidden","collapseNavbar","navPosition","setNavPosition","navMenu","useRef","onBodyClick","event","current","contains","target","document","body","handleScroll","pageYOffset","navitems","map","section","to","spy","smooth","offset","duration","activeClass","className","navScrollStyles","top","opacity","visibility","header","scrolled","display","backgroundColor","style","onClick","e","stopPropagation","ref","console","log","stackof","SocialLink","site","url","href","renderIcon","ScrollButton","direction","connect","state","data","home","id","name","occupation","description","social_links","link","renderSocialLinks","about","src","profile_pic","alt","color","bio","street","city","postal_code","phone","email","resume_link","marginLeft","ContentListItem","subheader","subtitle","dates","subdescription","renderHeader","renderSubheader","renderDescription","renderSubdescription","text","renderLink","ContentList","item","key","Math","random","education","dataToList","university","faculty","degree","graduated","thesis","experience","listData","roles","roletitle","margin","organization","fontStyle","totaltime","certifications","title","issuer","credentialId","credentialsLink","undefined","length","renderLinks","useHover","itemRef","hovered","setHovered","useMemo","PortfolioItem","smallItem","overlayRef","portfolioLinks","links","Object","keys","renderPortfolioLinks","overlay","process","imageName","imageAlt","PortfolioList","works","ContactFieldValidated","validators","component","label","type","placeholder","validate","input","meta","error","touched","required","value","isEmail","test","String","toLowerCase","maxLengthInput","maxLengthBody","composeValidators","reduce","validator","Contact","wideInputs","onSubmit","values","alert","JSON","stringify","render","handleSubmit","form","submitting","pristine","useVisibility","partial","once","visible","setVisible","triggered","setTriggered","delayedCheckVisibility","_","throttle","element","getBoundingClientRect","right","bottom","left","height","topCheck","bottomCheck","rightCheck","leftCheck","windowWidth","windowHeight","innerHeight","checkVisible","SkillBar","level","bar","shown","skills","App","dataReducer","sampleData","action","combineReducers","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","querySelector","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cd170f13.chunk.js","sourcesContent":["/**\r\n * Returns boolean if window's width is above set threshold.\r\n * \r\n * @param {number} minWidth Window width threshhold\r\n * \r\n * @returns {boolean} If window is bigger than set threshhold.\r\n */\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction getWindowWidth() {\r\n  const { innerWidth: width } = window;\r\n  return width;\r\n}\r\n\r\nconst useWidth = (minWidth: number):[boolean] => {\r\n  const [width, setWidth] = useState(getWindowWidth());\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWidth(getWindowWidth());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n\r\n  return [width >= minWidth];\r\n};\r\n\r\nexport default useWidth;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { List } from \"react-bootstrap-icons\";\r\n\r\nimport \"./Navbar.css\";\r\nimport useWidth from \"../hooks/useWidth\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [menuHidden, setMenuHidden] = useState(true);\r\n  const [collapseNavbar] = useWidth(768);\r\n  const [navPosition, setNavPosition] = useState(\"top\");\r\n  const navMenu = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    const onBodyClick = (event) => {\r\n      if (navMenu.current && navMenu.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      setMenuHidden(true);\r\n    };\r\n\r\n    document.body.addEventListener(\"click\", onBodyClick);\r\n\r\n    const handleScroll = () => {\r\n      if (window.pageYOffset <= 200) {\r\n        return setNavPosition(\"top\");\r\n      }\r\n      if (window.pageYOffset < 826) {\r\n        return setNavPosition(\"header\");\r\n      }\r\n      if (window.pageYOffset >= 826) {\r\n        return setNavPosition(\"scrolled\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n      document.body.removeEventListener(\"click\", onBodyClick);\r\n    };\r\n  }, []);\r\n\r\n  const sections = [\r\n    \"home\",\r\n    \"about\",\r\n    \"education\",\r\n    \"experience\",\r\n    \"skills\",\r\n    \"certifications\",\r\n    \"works\",\r\n    \"contact\",\r\n  ];\r\n  const navitems = sections.map((section) => (\r\n    <Link\r\n      key={section}\r\n      to={section}\r\n      spy={true}\r\n      smooth={true}\r\n      offset={-50}\r\n      duration={500}\r\n      activeClass=\"active\"\r\n    >\r\n      <li className=\"nav-item\" key={section}>\r\n        {section}\r\n      </li>\r\n    </Link>\r\n  ));\r\n\r\n  const navScrollStyles = {\r\n    top: { opacity: 1, visibility: \"visible\" },\r\n    header: { opacity: 0, visibility: \"invisible\" },\r\n    scrolled: { display: \"block\", backgroundColor: \"#333333\" },\r\n  };\r\n\r\n  const renderMenu = () => {\r\n    if (collapseNavbar) {\r\n      return (\r\n        <div\r\n          className=\"sticky-top navbarfull\"\r\n          //@ts-ignore\r\n          style={navScrollStyles[navPosition]}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <ul className={`item-list`}>{navitems}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"sticky-top\"\r\n          //@ts-ignore\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col navigation-wrapped\">\r\n              <span\r\n                className=\"nav-button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setMenuHidden(!menuHidden);\r\n                }}\r\n              >\r\n                <List />\r\n              </span>\r\n              <ul\r\n                //@ts-ignore\r\n                ref={navMenu}\r\n                className={`item-list-vertical ${menuHidden ? \"hidden\" : \"\"}`}\r\n                onClick={() => {\r\n                  setMenuHidden(true);\r\n                  console.log(\"click!\");\r\n                }}\r\n              >\r\n                {navitems}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <> {renderMenu()}</>;\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Github, Linkedin } from \"react-bootstrap-icons\";\r\n\r\nconst stackof = <i className=\"fab fa-stack-overflow\"></i>;\r\n\r\ninterface Props {\r\n  site: string;\r\n  url: string;\r\n}\r\n\r\nconst SocialLink: React.FC<Props> = ({ site, url }) => {\r\n  const renderIcon = () => {\r\n    switch (site) {\r\n      case \"github\":\r\n        return <Github />;\r\n      case \"linkedin\":\r\n        return <Linkedin />;\r\n      case \"stack\": {\r\n        return stackof\r\n      }\r\n    }\r\n  };\r\n\r\n  return <a href={url}>{renderIcon()}</a>;\r\n};\r\n\r\nexport default SocialLink","import React from \"react\";\r\nimport { ArrowDown, ArrowUp } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport \"./ScrollButton.css\";\r\n\r\ninterface props {\r\n  direction: \"top\" | \"bottom\";\r\n}\r\n\r\nconst ScrollButton: React.FC<props> = ({ direction }) => {\r\n  return (\r\n    <Link\r\n      className={`scroll-button ${direction}`}\r\n      to={direction === \"bottom\" ? \"about\" : \"home\"}\r\n      spy={true}\r\n      smooth={true}\r\n      offset={-50}\r\n      duration={500}\r\n    >\r\n      {direction === \"bottom\" ? (\r\n        <ArrowDown className=\"arrow\" />\r\n      ) : (\r\n        <ArrowUp className=\"arrow\" />\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Home.css\";\r\nimport SocialLink from \"./elements/SocialLink\";\r\nimport ScrollButton from \"./elements/ScrollButton\";\r\nimport { State } from \"../reducers\";\r\nimport { Home as HomeType } from \"../reducers/dataReducer\";\r\n\r\ninterface HomeProps {\r\n  data: HomeType;\r\n}\r\n\r\nconst Home: React.FC<HomeProps> = ({ data }) => {\r\n  const renderSocialLinks = () => {\r\n    if (data.social_links) {\r\n      return (\r\n        <ul className=\"social-links\">\r\n          {data.social_links.map((link) => {\r\n            return (\r\n              <li key={link.site}>\r\n                <SocialLink site={link.site} url={link.url} />{\" \"}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home d-flex text-center\" id=\"home\">\r\n      <div className=\"container home-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10 offset-md-1\">\r\n            <div className=\"home-content\" id=\"welcome-text\">\r\n              <h1 className=\"text-white font-weight-bold header-home\">\r\n                {data.name}\r\n              </h1>\r\n              <p className=\"text-light\">\r\n                I'm a Night City based <strong>{data.occupation}</strong>.{\" \"}\r\n                {data.description}\r\n              </p>\r\n              {renderSocialLinks()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ScrollButton direction=\"bottom\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.home,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Download } from \"react-bootstrap-icons\";\r\n\r\nimport \"./About.css\";\r\nimport { State } from \"../reducers\";\r\nimport { About as AboutType } from \"../reducers/dataReducer\";\r\n\r\ninterface AboutProps {\r\n  data: AboutType;\r\n}\r\n\r\nconst About: React.FC<AboutProps> = ({ data }) => {\r\n  return (\r\n    <div className=\"about-container\" id=\"about\">\r\n      <div className=\"container pt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 d-none d-md-block\">\r\n            <img\r\n              src={data.profile_pic}\r\n              className=\"profile-pic\"\r\n              alt=\"It's me!\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <div>\r\n              <h3 className=\"text-white\">About me</h3>\r\n              <p style={{ color: \"#C6C69D\" }}>{data.bio}</p>\r\n            </div>\r\n            <div className=\"row details-row\">\r\n              <div className=\"col-sm\">\r\n                <h3 className=\"text-white\">Contact details</h3>\r\n                <p style={{ color: \"#C6C69D\" }}>\r\n                  <span>{data.name}</span>\r\n                  <br />\r\n                  {data.street ? (\r\n                    <>\r\n                      <span>{data.street}</span>\r\n                      <br />\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {data.city || data.state || data.postal_code ? (\r\n                    <>\r\n                      <span>\r\n                        {data.city ? data.city : \"\"}\r\n                        {data.state ? `, ${data.state}: \"\"` : \"\"}\r\n                        {data.postal_code ? `, ${data.postal_code}` : \"\"}\r\n                      </span>\r\n                      <br />\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {data.phone? <><span>{data.phone}</span>\r\n                  <br /></>: \"\"}\r\n                  <span>{data.email}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md resume-button-container \">\r\n                <p>\r\n                  <a className=\"resume-button\" href={data.resume_link}>\r\n                    <Download />\r\n                    <span style={{ marginLeft: \"5px\" }}>\r\n                      Download my Resume\r\n                    </span>\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.about,\r\n  };\r\n};\r\n\r\nexport default connect(MapStateToProps)(About);\r\n","import React from \"react\";\r\nimport \"./ContentListItem.css\";\r\n\r\nexport interface props {\r\n  header: string;\r\n  subheader?: string;\r\n  subtitle?: string;\r\n  dates?: string;\r\n  description?: string;\r\n  subdescription?: string;\r\n  link?: { text: string; href: string };\r\n}\r\n\r\nconst ContentListItem: React.FC<props> = ({\r\n  header,\r\n  subheader,\r\n  subtitle,\r\n  dates,\r\n  description,\r\n  subdescription,\r\n  link,\r\n}: props) => {\r\n  const renderHeader = () => {\r\n    if (header) return <h3 className=\"header\">{header}</h3>;\r\n  };\r\n\r\n  const renderSubheader = () => {\r\n    if (subheader) return <p className=\"subheader\">{subheader}</p>;\r\n  };\r\n\r\n  const renderSubtitle = () => {\r\n    if (subtitle && dates) {\r\n      return (\r\n        <p className=\"subtitle\">\r\n          {subtitle} • {dates}\r\n        </p>\r\n      );\r\n    }\r\n    if (subtitle) return <p className=\"subtitle\">{dates}</p>;\r\n  };\r\n\r\n  const renderDescription = () => {\r\n    if (description) return <p>{description}</p>;\r\n  };\r\n\r\n  const renderSubdescription = () => {\r\n    if (subdescription)\r\n      return <p className=\"subdescription\">{subdescription}</p>;\r\n  };\r\n  const renderLink = () => {\r\n    if (link) {\r\n      return (\r\n        <a href={link.href}>\r\n          <p className=\"subdescription\">{link.text}</p>\r\n        </a>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row content-item-container\">\r\n      <div className=\"col\">\r\n        {renderHeader()}\r\n        {renderSubheader()}\r\n        {renderSubtitle()}\r\n        {renderDescription()}\r\n        {renderSubdescription()}\r\n        {renderLink()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentListItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ContentList.css\";\r\nimport ContentListItem, { props } from \"./ContentListItem\";\r\n\r\ninterface listProps {\r\n  data: Array<props>;\r\n}\r\n\r\nconst ContentList: React.FC<listProps> = ({ data }) => {\r\n  const renderItems = () => {\r\n    return data.map((item) => {\r\n      return <ContentListItem {...item} key={item.header + Math.random()} />;\r\n    });\r\n  };\r\n\r\n  return <div className=\"content-list\">{renderItems()}</div>;\r\n};\r\n\r\nexport default ContentList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Education.css\";\r\nimport { EducationItem } from \"../reducers/dataReducer\";\r\nimport { State } from \"../reducers\";\r\nimport ContentList from \"./list/ContentList\";\r\n\r\ninterface props {\r\n  data: Array<EducationItem>;\r\n}\r\n\r\nconst Education: React.FC<props> = ({ data }: props) => {\r\n  const dataToList = data.map(\r\n    ({ university, faculty, degree, graduated, description, thesis }) => {\r\n      return {\r\n        header: university,\r\n        subheader: faculty,\r\n        subtitle: degree,\r\n        dates: graduated,\r\n        description,\r\n        subdescription: thesis,\r\n      };\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"resume-container\" id=\"education\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"resume-list-header\">Education</span>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <ContentList data={dataToList}  />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.education,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Education);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Experience.css\";\r\nimport { ExperienceItem } from \"../reducers/dataReducer\";\r\nimport { State } from \"../reducers\";\r\nimport ContentList from \"./list/ContentList\";\r\n\r\ninterface props {\r\n  data: Array<ExperienceItem>;\r\n}\r\n\r\nconst Experience: React.FC<props> = ({ data }: props) => {\r\n  const renderOrganizations = () => {\r\n    return data.map((item) => {\r\n      const listData = item.roles.map((item) => {\r\n        return {\r\n          header: item.roletitle,\r\n          subheader: item.dates,\r\n          description: item.description,\r\n        };\r\n      });\r\n\r\n      return (\r\n        <div key={item.organization + Math.random() * 100}>\r\n          <h2 style={{ margin: \"0\" }}>{item.organization}</h2>\r\n          <p style={{ margin: \"0\", color: \"gray\", fontStyle: \"italic\" }}>\r\n            {item.totaltime}\r\n          </p>\r\n          <div style={{ marginLeft: \"10px\" }}>\r\n            <ContentList data={listData} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"resume-container\" id=\"experience\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"resume-list-header\">Experience</span>\r\n          </div>\r\n          <div className=\"col-md-8\">{renderOrganizations()}</div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.experience,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Experience);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Certifications.css\";\r\nimport { CertificationItem } from \"../reducers/dataReducer\";\r\nimport { State } from \"../reducers\";\r\nimport ContentList from \"./list/ContentList\";\r\n\r\ninterface props {\r\n  data: Array<CertificationItem>;\r\n}\r\n\r\nconst Certifications: React.FC<props> = ({ data }: props) => {\r\n  const dataToList = data.map(\r\n    ({ title, issuer, dates, credentialId, credentialsLink }) => {\r\n      return {\r\n        header: title,\r\n        subtitle: issuer,\r\n        dates,\r\n        subdescription: credentialId ? `Credential ID ${credentialId}` : \"\",\r\n        link: credentialsLink\r\n          ? { text: \"See credentials\", href: credentialsLink }\r\n          : undefined,\r\n      };\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"resume-container\" id=\"certifications\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"resume-list-header\">Certifications</span>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <ContentList data={dataToList} />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.certifications,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Certifications);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Footer.css\";\r\nimport { State } from \"../reducers/index\";\r\nimport { Home } from \"../reducers/dataReducer\";\r\nimport SocialLink from \"./elements/SocialLink\";\r\n\r\ninterface Props {\r\n  data: Home[\"social_links\"];\r\n}\r\n\r\nconst Footer: React.FC<Props> = ({ data }) => {\r\n  const renderLinks = () => {\r\n    if (data && data.length) {\r\n      return data.map((link) => {\r\n        return <SocialLink site={link.site} url={link.url} key={link.site} />;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"container footer-content\">\r\n        <div className=\"links-container\">{renderLinks()}</div>\r\n        <p>&copy;2020 Piotr Ułasiewicz</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.home.social_links,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","/**\r\n * Checks if use is hovering above an element\r\n *\r\n * @param {RefObject<HTMLDivElement>} itemRef reference to an object\r\n *\r\n * @returns {boolean} Is the user hovering the object\r\n */\r\n\r\nimport { useState, useEffect, RefObject, useMemo } from \"react\";\r\n\r\nconst useHover = (itemRef: RefObject<HTMLDivElement>): [boolean] => {\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (itemRef && itemRef.current) {\r\n      const item = itemRef.current;\r\n      item.addEventListener(\"mouseenter\", (e) => {\r\n        setHovered(true);\r\n      });\r\n      item.addEventListener(\"mouseleave\", (e) => {\r\n        setHovered(false);\r\n      });\r\n\r\n      return () => {\r\n        item.removeEventListener(\"mouseenter\", () => {\r\n          setHovered(true);\r\n        });\r\n        item.removeEventListener(\"mouseleave\", () => {\r\n          setHovered(false);\r\n        });\r\n      };\r\n    }\r\n  });\r\n  return [useMemo(() => hovered, [hovered])];\r\n};\r\n\r\nexport default useHover;\r\n","import React, { useRef, useMemo } from \"react\";\r\nimport { Github, Window, Phone } from \"react-bootstrap-icons\";\r\n\r\nimport \"./PortfolioItem.css\";\r\nimport useWidth from \"../../hooks/useWidth\";\r\nimport useHover from \"../../hooks/useHover\";\r\nimport { WorksItem } from \"../../reducers/dataReducer\";\r\ninterface Props {\r\n  data: WorksItem;\r\n}\r\n\r\nconst PortfolioItem: React.FC<Props> = ({ data }) => {\r\n  const [smallItem] = useWidth(992);\r\n  const overlayRef = useRef<HTMLInputElement>(null);\r\n  const [hovered] = useHover(overlayRef);\r\n\r\n  const portfolioLinks = useMemo(() => {\r\n    const renderPortfolioLinks = () => {\r\n      if (data.links) {\r\n        const keys = Object.keys(data.links);\r\n\r\n        const links = keys.map((key) => {\r\n          switch (key) {\r\n            case \"github\":\r\n              return (\r\n                <a href={data.links[key]} key={key} className=\"portfolio-link\">\r\n                  <Github />\r\n                </a>\r\n              );\r\n            case \"own\":\r\n              return (\r\n                <a href={data.links[key]} key={key} className=\"portfolio-link\">\r\n                  <Window />\r\n                </a>\r\n              );\r\n            case \"expo\":\r\n              return (\r\n                <a href={data.links[key]} key={key} className=\"portfolio-link\">\r\n                  <Phone />\r\n                </a>\r\n              );\r\n            default:\r\n              return undefined;\r\n          }\r\n        });\r\n        switch (links.length) {\r\n          case 1:\r\n            return <div className=\"col-2 offset-5\">{links[0]}</div>;\r\n          case 2:\r\n            return (\r\n              <>\r\n                <div className=\"col-2 offset-3\">{links[0]}</div>\r\n                <div className=\"col-2 offset-2\">{links[1]}</div>\r\n              </>\r\n            );\r\n          case 3:\r\n            return (\r\n              <>\r\n                <div className=\"col-2 offset-1\">{links[0]}</div>\r\n                <div className=\"col-2 offset-2\">{links[1]}</div>\r\n                <div className=\"col-2 offset-2\">{links[2]}</div>\r\n              </>\r\n            );\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`row link-row ${smallItem ? \"link-small mt-3\" : \"mx-3\"}`}\r\n      >\r\n        {renderPortfolioLinks()}\r\n      </div>\r\n    );\r\n  }, [data.links, smallItem]);\r\n\r\n  const overlay = useMemo(() => {\r\n    return (\r\n      <div className=\"protfolio-item-container pt-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8 offset-2\">\r\n            <span\r\n              className={`${\r\n                smallItem ? \"portfolio-header-small mt-3\" : \"portfolio-header\"\r\n              }`}\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {smallItem ? (\r\n          \"\"\r\n        ) : (\r\n          <div className=\"row portfolio-description\">\r\n            <div className=\"col-10 offset-1\">\r\n              <p>{data.description}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {portfolioLinks}\r\n      </div>\r\n    );\r\n  }, [data, smallItem, portfolioLinks]);\r\n\r\n\r\n  return (\r\n    <div className=\"card portfolio-item\" ref={overlayRef}>\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/assets/img/${data.imageName}`}\r\n        alt={data.imageAlt}\r\n        className=\"card-img-top\"\r\n      />\r\n      <div className={`overlay ${hovered ? \"hovered\" : \"\"}`}>\r\n        {overlay}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioItem;\r\n","import React from \"react\";\r\n\r\nimport { WorksItem } from \"../../reducers/dataReducer\";\r\nimport PortfolioItem from \"./PortfolioItem\";\r\n\r\ninterface Props {\r\n  data: Array<WorksItem>;\r\n}\r\n\r\nconst PortfolioList: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map((item) => (\r\n        <div className=\"col-lg-3\" key={item.title}>\r\n          <PortfolioItem data={item} />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PortfolioList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Works.css\";\r\nimport PortfolioList from \"./portfolio/PortfolioList\";\r\nimport { State } from \"../reducers\";\r\nimport { WorksItem } from \"../reducers/dataReducer\";\r\n\r\ninterface Props {\r\n  data: Array<WorksItem>;\r\n}\r\n\r\nconst Works: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <div className=\"resume-container works-container\" id=\"works\">\r\n      <div className=\"container\">\r\n        <div className=\"row works-header\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"resume-list-header works-header\">Works</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <PortfolioList data={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    data: state.data.works,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Works);\r\n","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport \"./Contact.css\";\r\nimport ScrollButton from \"./elements/ScrollButton\";\r\nimport useWidth from \"../hooks/useWidth\";\r\n\r\ninterface FieldProps {\r\n  label: string;\r\n  name: string;\r\n  placeholder: string;\r\n  component: \"input\" | \"textarea\";\r\n  type: string;\r\n  validators?: any;\r\n}\r\n\r\nconst ContactFieldValidated: React.FC<FieldProps> = ({\r\n  name,\r\n  validators,\r\n  component,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <Field name={name} validate={validators}>\r\n      {({ input, meta }) => (\r\n        <div className=\"row input-container d-flex justify-content-center\">\r\n          <div className=\"col-md-2 field-label-container\">\r\n            <label className=\"field-label\">{label}</label>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            {component === \"input\" ? (\r\n              <input {...input} type={type} placeholder={placeholder} />\r\n            ) : (\r\n              <textarea {...input} placeholder={placeholder} />\r\n            )}\r\n            <p className=\"validation-error\">\r\n              {meta.error && meta.touched && meta.error}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst required = (value: string) => (value ? undefined : \"Required\");\r\nconst isEmail = (value: string) => {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(value).toLowerCase())\r\n    ? undefined\r\n    : \"Enter valid email.\";\r\n};\r\nconst maxLengthInput = (value: string) =>\r\n  value.length < 30 ? undefined : \"Maximum field length is 30 characters!\";\r\nconst maxLengthBody = (value: string) =>\r\n  value.length < 250 ? undefined : \"Maximum field length is 250 characters!\";\r\n\r\nconst composeValidators = (...validators: any) => (value: string) =>\r\n  validators.reduce(\r\n    (error: string, validator: any) => error || validator(value),\r\n    undefined\r\n  );\r\n\r\nconst Contact: React.FC = () => {\r\n  const [wideInputs] = useWidth(855);\r\n\r\n  const onSubmit = (values: {}) => {\r\n    alert(\"Email API is not connected yet, sorry! Your precious inputs:\");\r\n    alert(JSON.stringify(values));\r\n  };\r\n\r\n  const renderForm = (): React.ReactNode => {\r\n    return (\r\n      <div>\r\n        <Form\r\n          onSubmit={onSubmit}\r\n          render={({ handleSubmit, form, submitting, pristine, values }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <ContactFieldValidated\r\n                  name=\"name\"\r\n                  placeholder=\"Name or title\"\r\n                  label=\"Name\"\r\n                  component=\"input\"\r\n                  type=\"text\"\r\n                  validators={composeValidators(required, maxLengthInput)}\r\n                />\r\n                <ContactFieldValidated\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  component=\"input\"\r\n                  validators={composeValidators(\r\n                    isEmail,\r\n                    required,\r\n                    maxLengthInput\r\n                  )}\r\n                />\r\n                <ContactFieldValidated\r\n                  name=\"subject\"\r\n                  placeholder=\"Message subject\"\r\n                  label=\"Subject\"\r\n                  component=\"input\"\r\n                  type=\"text\"\r\n                  validators={composeValidators(required, maxLengthInput)}\r\n                />\r\n                <ContactFieldValidated\r\n                  name=\"body\"\r\n                  placeholder=\"Message body. Email api is not yet connected to this form.\"\r\n                  label=\"Message\"\r\n                  component=\"textarea\"\r\n                  type=\"text\"\r\n                  validators={composeValidators(required, maxLengthBody)}\r\n                />\r\n                <div className=\"button-container\">\r\n                  <button className=\"submit-button\" onClick={handleSubmit}>\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container \" id=\"contact\">\r\n      <div\r\n        className=\"form-container\"\r\n        style={{ width: wideInputs ? \"60%\" : \"100%\" }}\r\n      >\r\n        {renderForm()}\r\n      </div>\r\n      <div className=\"scroll-top-btn\">\r\n        <ScrollButton direction=\"top\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","/**\r\n * Checks if referenced element is visible on viewport.\r\n *\r\n * @param {RefObject<HTMLDivElement>} itemRef Reference to the div element\r\n * @param {boolean} partial Should whole element be concidered or a part of it\r\n * @param {boolean} once Should visibility be triggered only on first viewing\r\n *\r\n * @returns {boolean} If element is visible or has been viewed.\r\n */\r\n\r\nimport { useState, RefObject, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst checkVisible = (element: RefObject<HTMLDivElement>, partial: boolean) => {\r\n  if (!element.current) return false;\r\n\r\n  const {\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    width,\r\n    height,\r\n  } = element.current.getBoundingClientRect();\r\n\r\n  if (top + right + bottom + left === 0) {\r\n    return false;\r\n  }\r\n\r\n  const topCheck = partial ? top + height : top;\r\n  const bottomCheck = partial ? bottom - height : bottom;\r\n  const rightCheck = partial ? right - width : right;\r\n  const leftCheck = partial ? left + width : left;\r\n\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n\r\n  return (\r\n    topCheck >= 0 &&\r\n    leftCheck >= 0 &&\r\n    bottomCheck <= windowHeight &&\r\n    rightCheck <= windowWidth\r\n  );\r\n};\r\n\r\nconst useVisibility = (\r\n  itemRef: RefObject<HTMLDivElement>,\r\n  partial: boolean,\r\n  once: boolean\r\n): [boolean] => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [triggered, setTriggered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const delayedCheckVisibility = _.throttle(\r\n      () => setVisible(checkVisible(itemRef, partial)),\r\n      250\r\n    );\r\n    if (once && visible) {\r\n      setTriggered(true);\r\n    }\r\n\r\n    if (!triggered) {\r\n      window.addEventListener(\"scroll\", delayedCheckVisibility);\r\n      window.addEventListener(\"resize\", delayedCheckVisibility);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", delayedCheckVisibility);\r\n      window.removeEventListener(\"resize\", delayedCheckVisibility);\r\n    };\r\n  }, [itemRef, partial, visible, once, triggered]);\r\n\r\n  return [visible];\r\n};\r\n\r\nexport default useVisibility;\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./SkillBar.css\";\r\nimport useVisibility from \"../../hooks/useVisibility\";\r\nimport { SkillsItem } from \"../../reducers/dataReducer\";\r\n\r\ninterface Props {\r\n  data: SkillsItem;\r\n}\r\n\r\nconst SkillBar: React.FunctionComponent<Props> = ({\r\n  data: { title, subtitle, level },\r\n}) => {\r\n  const bar = useRef<HTMLInputElement>(null);\r\n  const [shown] = useVisibility(bar, true, true);\r\n\r\n  return (\r\n    <div className=\"row skill-bar-container\" ref={bar}>\r\n      <div className=\" col-3\">\r\n        <p className=\"skill-bar-header\">{title}</p>\r\n        {subtitle ? <p className=\"skill-bar-subtitle\">{subtitle}</p> : \"\"}\r\n      </div>\r\n      <div className=\"bar-container col-9\">\r\n        <div className=\"bar-border\">\r\n          <div\r\n            className=\"bar-level\"\r\n            style={{ width: shown ? `${level}%` : \"0%\" }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SkillBar from \"./elements/SkillBar\";\r\n\r\nimport { State } from \"../reducers\";\r\nimport { SkillsItem } from \"../reducers/dataReducer\";\r\n\r\nimport \"./Skills.css\";\r\n\r\ninterface Props {\r\n  data: Array<SkillsItem>;\r\n}\r\n\r\nconst Skills: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <div className=\"resume-container skills-container\" id=\"skills\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"resume-list-header\">Skills</span>\r\n          </div>\r\n          <div className=\"col-md-8 skills-list\">\r\n            {data.map((item) => (\r\n              <SkillBar data={item} key={item.title} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({ data: state.data.skills });\r\n\r\nexport default connect(mapStateToProps)(Skills);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Home from \"./Components/Home\";\r\nimport About from \"./Components/About\";\r\nimport Education from \"./Components/Education\";\r\nimport Experience from \"./Components/Experience\";\r\nimport Certifications from \"./Components/Certifications\";\r\nimport Footer from \"./Components/Footer\";\r\nimport Works from \"./Components/Works\";\r\nimport Contact from \"./Components/Contact\";\r\nimport Skills from \"./Components/Skills\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Home />\r\n      <About />\r\n      <Education />\r\n      <Experience />\r\n      <Skills />\r\n      <Certifications />\r\n      <Works />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import sampleData from \"../assets/data/sampledata.json\";\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport interface Home {\r\n  name: string;\r\n  description: string;\r\n  occupation: string;\r\n  social_links?: Array<{ site: string, url:string }>\r\n}\r\n\r\nexport interface About {\r\n  bio: string;\r\n  name: string;\r\n  street?: string;\r\n  city?: string;\r\n  state?: string;\r\n  postal_code?: string;\r\n  phone?: string;\r\n  email: string;\r\n  profile_pic: string;\r\n  resume_link?: string;\r\n}\r\n\r\nexport interface EducationItem {\r\n  university: string;\r\n  faculty: string;\r\n  degree: string;\r\n  graduated: string;\r\n  description?: string;\r\n  thesis?: string;\r\n}\r\n\r\nexport interface ExperienceItem {\r\n  organization: string;\r\n  totaltime?: string;\r\n  roles: Array<{ roletitle: string; dates: string; description: string }>;\r\n}\r\n\r\nexport interface SkillsItem {\r\n  title: string;\r\n  subtitle?: string;\r\n  level: number;\r\n}\r\n\r\nexport interface CertificationItem {\r\n  title: string;\r\n  issuer: string;\r\n  dates: string;\r\n  credentialId?: string;\r\n  credentialsLink?: string;\r\n}\r\n\r\nexport interface WorksItem {\r\n  title: string;\r\n  description: string;\r\n  imageName: string;\r\n  imageAlt: string;\r\n  links: {\r\n    github?: string;\r\n    own?: string;\r\n    expo?: string;\r\n  };\r\n}\r\n\r\nexport interface Data {\r\n  home: Home;\r\n  about: About;\r\n  education: Array<EducationItem>;\r\n  experience: Array<ExperienceItem>;\r\n  skills: Array<SkillsItem>;\r\n  certifications: Array<CertificationItem>;\r\n  works: Array<WorksItem>;\r\n}\r\n\r\nconst dataReducer = (data: Data = sampleData, action: Action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport dataReducer, { Data } from \"./dataReducer\";\r\n\r\nexport default combineReducers({\r\n  data: dataReducer,\r\n});\r\n\r\nexport interface State {\r\n  data: Data;\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducers from \"./reducers\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}